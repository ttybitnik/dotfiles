#!/bin/sh

# Naming standard for backups (ISO 8601).
#   Installation:
#     system-wide (rerun 'make install' to reflect changes)
#   Dependencies:
#     /usr/local/lib/tty.sh
#     ~/.local/bin/ttysha

. /usr/local/lib/tty.sh

readonly SCRIPT="${0##*/}"

# OPT(uname): s={kernel,system}-name
case $(uname -s) in
    FreeBSD*|OpenBSD*|NetBSD*|Darwin*)
	# OPT(date): r=reference-time
	_date0() { date -r "$1" "+%Y%m%dT%H%M%S"; }
	# OPT(stat): f=format
	_stat0() { stat -f %m "$1"; }
	;;
    *)
	# OPT(date): d=date
	_date0() { date -d "@$1" "+%Y%m%dT%H%M%S"; }
	# OPT(stat): c=format
	_stat0() { stat -c %Y "$1"; }
	;;
esac

sanitize_input()
{
    _input=$1
    # OPT(tr): c=complement d=delete
    printf "%s" "$_input" \
	| tr ' ' '_' \
	| tr '[:upper:]' '[:lower:]' \
	| tr -cd '[:alnum:]_'
}

prompt_input()
{
    printf "Enter elements separated by spaces if needed.\n"
    printf "Domain name: "
    # OPT(read): r=no-backslashes
    read -r input_domain
    printf "Scope: "
    # OPT(read): r=no-backslashes
    read -r input_scope

    domain=$(sanitize_input "$input_domain")
    scope=$(sanitize_input "$input_scope")
}

if [ "$#" -ne 1 ]; then
    tty_fatal "%s: wrong number of arguments" "$SCRIPT"
fi

filename="$1"
if [ ! -f "$filename" ]; then
    tty_fatal "%s: file not found: '%s'" "$SCRIPT" "$filename"
fi

prompt_input
file_basename="${filename##*/}"
file_ext="${file_basename#*.}"

if ! mod_epoch=$(_stat0 "$filename"); then
    tty_notify_fatal "%s: _stat0 failed with non-zero exit code" "$SCRIPT"
fi

if ! mod_timestamp=$(_date0 "$mod_epoch"); then
    tty_notify_fatal "%s: _date0 failed with non-zero exit code" "$SCRIPT"
fi

# OPT(ttysha): l=length p=print
if ! file_sha=$(ttysha -l 16 -p "$filename"); then
    tty_notify_fatal "%s: ttysha failed with non-zero exit code" "$SCRIPT"
fi

new_filename="${domain}_${scope}_${mod_timestamp}_${file_sha}.${file_ext}"
if mv -- "$filename" "$new_filename"; then
    tty_info "%s: new file name: '%s' -> '%s'" \
	     "$SCRIPT" "$filename" "$new_filename"
else
    tty_notify_fatal "%s: mv failed with exit code %d" "$SCRIPT" "$?"
fi
