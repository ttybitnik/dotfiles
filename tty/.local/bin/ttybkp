#!/bin/sh

# Naming standard for backups (ISO 8601).
#   Dependencies:
#     /usr/local/lib/tty.sh
#     <https://www.gnu.org/software/coreutils/>

. /usr/local/lib/tty.sh

if command -v gdate >/dev/null 2>&1; then
    DATE_CMD="gdate"
    STAT_CMD="gnustat"
else
    DATE_CMD="date"
    STAT_CMD="stat"
fi

# OPT(uname): s={kernel,system}-name
case $(uname -s) in
    FreeBSD*|OpenBSD*|NetBSD*|Darwin*)
	if [ "$DATE_CMD" = "date" ]; then
	    tty_fatal "%s: GNU Core Utilities not installed" "$(basename "$0")"
	fi
	;;
esac

sanitize_input() {
    # OPT(tr): c=complement d=delete
    printf "%s" "$1" \
	| tr ' ' '_' \
	| tr '[:upper:]' '[:lower:]' \
	| tr -cd '[:alnum:]_'
}

prompt_input() {
    printf "Enter elements separated by spaces if needed.\n"
    printf "Technology name: "
    # OPT(read): r=no-backslashes
    read -r input_domain
    printf "Specific info: "
    # OPT(read): r=no-backslashes
    read -r input_scope

    domain=$(sanitize_input "$input_domain")
    scope=$(sanitize_input "$input_scope")
}

main() {
    prompt_input
    filename=$(basename -- "$1")
    extensions="${filename#*.}"
    # OPT(stat): c=format
    modification_epoch=$("$STAT_CMD" -c %Y "$1")
    # OPT(date): d=date
    modification_timestamp=$("$DATE_CMD" -d "@$modification_epoch" +"%Y%m%dT%H%M%S")

    new_filename="${domain}_${scope}_${modification_timestamp}.${extensions}"

    mv "$1" "$new_filename"
    tty_info "%s: new file name '%s'" "$(basename "$0")" "$new_filename"
}

if [ "$#" -ne 1 ]; then
    tty_fatal "%s: wrong number of arguments" "$(basename "$0")"
elif [ ! -f "$1" ]; then
    tty_fatal "%s: file not found: '%s'" "$(basename "$0")" "$1"
else
    main "$@"
fi
