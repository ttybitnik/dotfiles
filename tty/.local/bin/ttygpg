#!/bin/sh

# Encryption with AES256 and original file deletion.
#   Dependencies:
#     /usr/local/lib/tty.sh

. /usr/local/lib/tty.sh

# OPT(uname): s={kernel,system}-name
case $(uname -s) in
    FreeBSD*|OpenBSD*|NetBSD*|Darwin*)
	# OPT(rm): f=force v=verbose
	_shred0() { rm -f -v -- "$1"; }
	;;
    *)
	# OPT(shred): z=zero u=dealloc-remove v=verbose
	_shred0() { shred -z -u -v -- "$1"; }
	;;
esac

delete_if_exist() {
    encrypted_file="$(ls "${1}.gpg")"

    if [ -f "$encrypted_file" ]; then
	tty_info "%s: file successfully encrypted: '%s'" \
		 "$(basename "$0")" "$encrypted_file"
	printf "Remove original file (y/n)? "
	# OPT(read): r=no-backslashes
	read -r response
	response=$(printf "%s" "$response" | tr '[:upper:]' '[:lower:]')

	while [ "$response" != "y" ] && [ "$response" != "n" ]; do
	    printf "Invalid input. Remove original file (y/n)? "
	    # OPT(read): r=no-backslashes
	    read -r response
	    response=$(printf "%s" "$response" | tr '[:upper:]' '[:lower:]')
	done

	if [ "$response" = "y" ]; then
	    _shred0 "$1"
	    tty_info "original file removed: '%s'" "$1"
	else
	    exit 0
	fi
    else
	tty_fatal "%s: file not found: '%s'" \
		  "$(basename "$0")" "$encrypted_file"
    fi
}

main() {
    # OPT(gpg): c=symmetric
    gpg -c --no-symkey-cache --cipher-algo AES256 "$1"
    delete_if_exist "$@"
}

if [ "$#" -ne 1 ]; then
    tty_fatal "%s: wrong number of arguments" "$(basename "$0")"
elif [ ! -f "$1" ]; then
    tty_fatal "%s: file not found: '%s'" "$(basename "$0")" "$1"
else
    main "$@"
fi
