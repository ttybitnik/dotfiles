#!/bin/sh

# Encryption with AES256 and original file deletion.
#   Dependencies:
#     /usr/local/lib/tty.sh

. /usr/local/lib/tty.sh

readonly SCRIPT="${0##*/}"

# OPT(uname): s={kernel,system}-name
case $(uname -s) in
    FreeBSD* | OpenBSD* | NetBSD* | Darwin*)
        _shred0()
        {
            # OPT(rm): f=force v=verbose
            rm -f -v -- "$1"
        }
        ;;
    *)
        _shred0()
        {
            # OPT(shred): z=zero u=dealloc-remove v=verbose
            shred -z -u -v -- "$1"
        }
        ;;
esac

delete_if_exist()
{
    encrypted_file=$(ls "${1}.gpg")

    if [ -f "$encrypted_file" ]; then
        tty_info "%s: file successfully encrypted: '%s'" \
                 "$SCRIPT" "$encrypted_file"
        printf "Remove original file (y/n)? "
        # OPT(read): r=no-backslashes
        read -r response
        response=$(printf "%s" "$response" | tr '[:upper:]' '[:lower:]')

        while [ "$response" != "y" ] && [ "$response" != "n" ]; do
            printf "Invalid input. Remove original file (y/n)? "
            # OPT(read): r=no-backslashes
            read -r response
            response=$(printf "%s" "$response" | tr '[:upper:]' '[:lower:]')
        done

        if [ "$response" = "y" ]; then
            _shred0 "$1"
            tty_info "original file removed: '%s'" "$1"
        else
            exit 0
        fi
    else
        tty_fatal "%s: file not found: '%s'" "$SCRIPT" "$encrypted_file"
    fi
}

if [ "$#" -ne 1 ]; then
    tty_fatal "%s: wrong number of arguments" "$SCRIPT"
elif [ ! -f "$1" ]; then
    tty_fatal "%s: file not found: '%s'" "$SCRIPT" "$1"
else
    # OPT(gpg): c=symmetric
    gpg -c --no-symkey-cache --cipher-algo AES256 -- "$1"
    delete_if_exist "$@"
fi
