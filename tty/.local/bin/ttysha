#!/bin/sh

# Rename file appending its SHA256 digest.
#   Installation:
#     system-wide (rerun 'make install' to reflect changes)
#   Dependencies:
#     /usr/local/lib/tty.sh

. /usr/local/lib/tty.sh

readonly DEFAULT_LENGTH=16
readonly DEFAULT_SEPARATOR="-"
readonly DEFAULT_PRINT=0
readonly SCRIPT="${0##*/}"

print_help() {
    cat <<EOF
Usage: $SCRIPT [-l length] [-s separator] [-p] <file>

Rename file appending its SHA256 digest.

Options:
  -l <length>      Length of hash characters (default "$DEFAULT_LENGTH").
  -s <separator>   Separator character (default "$DEFAULT_SEPARATOR").
  -p               Print hash file name to stdout instead of renaming.
  -h               Display this help.
EOF
}

while getopts ":l:s:ph" opt; do
    case $opt in
	l)
	    OPT_LENGTH="$OPTARG"
	    ;;
	s)
	    OPT_SEPARATOR="$OPTARG"
	    ;;
	p)
	    OPT_PRINT=1
	    ;;
	h)
	    print_help
	    exit 0
	    ;;
	\?)
	    trap print_help EXIT
	    tty_fatal "%s: invalid option: '-%s'" "$SCRIPT" "$OPTARG"
	    ;;
	:)
	    trap print_help EXIT
	    tty_fatal "%s: option requires an argument: '-%s'" \
		      "$SCRIPT" "$OPTARG"
	    ;;
    esac
done
shift $(( OPTIND - 1 ))

if [ "$#" -ne 1 ]; then
    trap print_help EXIT
    tty_fatal "%s: wrong number of arguments" "$SCRIPT"
fi

filename="$1"
if [ ! -f "$filename" ]; then
    tty_fatal "%s: file not found: '%s'" "$SCRIPT" "$filename"
fi

length="${OPT_LENGTH:-$DEFAULT_LENGTH}"
if [ "$length" -lt 1 ] || [ "$length" -gt 64 ]; then
    tty_fatal "%s: invalid length '%s': must be an integer from 1 to 64" \
	      "$SCRIPT" "$length"
fi

separator="${OPT_SEPARATOR:-$DEFAULT_SEPARATOR}"
if [ "${#separator}" -ne 1 ]; then
    tty_fatal "%s: invalid separator '%s': must be a single character" \
	      "$SCRIPT" "$separator"
fi

print="${OPT_PRINT:-$DEFAULT_PRINT}"

# OPT(cut): c=characters
if ! file_sha=$(sha256sum "$filename" | cut -c 1-"$length"); then
    tty_notify_fatal "%s: file_sha pipe failed with non-zero exit code" "$SCRIPT"
fi

if [ "$print" -eq 1 ]; then
    printf "%s" "$file_sha"
    [ -t 0 ] && printf "\n"
    exit 0
fi

file_dir_or_basename="${filename%/*}"
file_basename="${filename##*/}"
file_basename_noext="${file_basename%%.*}"
file_ext="${file_basename#*.}"

regexp_sha=".*${separator}[a-fA-F0-9]\{$length\}$"
if expr "$file_basename_noext" : "$regexp_sha" >/dev/null; then
    tty_fatal "%s: file already named with %d characters SHA256 digest: '%s'" \
	      "$SCRIPT" "$length" "$filename"
fi

new_filename="${file_basename_noext}${separator}${file_sha}.${file_ext}"
if [ ! "$file_dir_or_basename" = "$file_basename" ]; then
    file_dir=${file_dir_or_basename}
    new_filename="${file_dir}/${new_filename}"
fi

if mv -- "$filename" "$new_filename"; then
    tty_info "%s: new file name: '%s' -> '%s'" \
	     "$SCRIPT" "$filename" "$new_filename"
else
    tty_notify_fatal "%s: mv failed with exit code %d" "$SCRIPT" "$?"
fi
