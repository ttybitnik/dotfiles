#!/bin/sh

# Wrapper to run  EOD (end of day) scripts.
#   Dependencies:
#     ~/.local/bin/ttylog

: "${ROOT_CMD:=sudo}"

print_align_asterisk_box()
{
    margin=30
    str="$1"
    str_len=${#str}
    str_difference=$((margin - str_len))
    str_offset=$((str_difference / 2))
    str_remainder=$((str_difference % 2))

    if [ "$str_remainder" -eq 0 ]; then
        printf "%*s\n" "$margin" '=' | tr " " "="
        printf "%*s%s%*s\n" \
               "$str_offset" '' \
               "$str" "$str_offset" ''
        printf "%*s\n" "$margin" '=' | tr " " "="
    else
        printf "%*s\n" "$((margin + str_remainder))" '=' | tr " " "="
        printf "%*s%s%*s\n" \
               "$((str_offset + str_remainder))"  '' \
               "$str" \
               "$((str_offset + str_remainder))"  ''
        printf "%*s\n" "$((margin + str_remainder))" '=' | tr " " "="
    fi
}

cleanup()
{
    kill -- "$ROOT_CMD_ALIVE_PID" 2>/dev/null

    # OPT(sudo): k=reset-timestamp
    [ "$ROOT_CMD" = "sudo" ] && sudo -k
}

trap cleanup EXIT
# Prompt for privellege escalation only once
"$ROOT_CMD" true
while true; do
    "$ROOT_CMD" true
    sleep 60
done &
ROOT_CMD_ALIVE_PID=$!
printf "** ROOT_CMD_ALIVE_PID: %d **\n" "$ROOT_CMD_ALIVE_PID"

print_align_asterisk_box "Running cronaudit..."
ttylog cronaudit

# print_align_asterisk_box "Running cronaide..."
# ttylog cronaide

print_align_asterisk_box "Running omni..."
ttylog omni

print_align_asterisk_box "Running cronbib..."
ttylog cronbib

print_align_asterisk_box "Running crongit..."
ttylog crongit

print_align_asterisk_box "Running crondrive..."
ttylog crondrive_local
