#!/bin/sh

# Standard for logging commands (ISO 8601 and POSIX).
#   Globals:
#     TTY_ORPHEUS
#   Dependencies:
#     /usr/local/lib/tty.sh

. /usr/local/lib/tty.sh

readonly SCRIPT="${0##*/}"

# OPT(uname): s={kernel,system}-name
case $(uname -s) in
    FreeBSD*|OpenBSD*|NetBSD*|Darwin*)
	_date0() { date "+%Y%m%dT%H%M%S"; }
	;;
    *)
	_date0() { date "+%Y%m%dT%H%M%S"; }
	;;
esac

timestamp=$(_date0)
# OPT(uname): n=nodename
nodename=$(uname -n)
logfile_tmp=$(mktemp)

cleanup()
{
    [ -e "$logfile_tmp" ] && rm -- "$logfile_tmp"
    [ -e "$err_pipe_tmp" ] && rm -- "$err_pipe_tmp"
}
trap 'cleanup' EXIT

lambda()
{
    printf "+> %s\n" "$*"
    # OPT(time): p=portability
    time -p "$@"
    err=$?
    return "$err"
}

err_pipe_tmp=$(mktemp)
(lambda "$@" 2>&1; printf "%d" "$?" > "$err_pipe_tmp") | tee "$logfile_tmp"
err=$(cat "$err_pipe_tmp")

logfile_r="${TTY_ORPHEUS}/ttylogs/${nodename}_${timestamp}_"
logfile_r="${logfile_r}${1}_${err}.log.xz"

if [ "$err" != 0 ]; then
    tty_notify_fatal "%s: %s failed with exit code %d: '%s'" \
		     "$SCRIPT" "$1" "$err" "${logfile_r##*/}"
fi

xz "$logfile_tmp"
mv "${logfile_tmp}.xz" "$logfile_r"
chmod 400 "$logfile_r"
chcon unconfined_u:object_r:user_home_t:s0 "$logfile_r"

tty_notify_info "%s: %s execution complete: '%s'" \
		"$SCRIPT" "$1" "${logfile_r##*/}"
