#!/usr/bin/env bash

# Script for handling APIs and secrets in a encrypted fashion.
#   Dependencies:
#     ~/.ttypas2.gpg for setting privately arrays with secrets info
#   Arrays structure:
#     service secret_path

readonly PASS_PATH="${HOME}/.ttypas2.gpg"

validate() {
    if [ ! -f "$PASS_PATH" ]; then
	printf "Error: path file not found.\n" >&2
	exit 1
    fi

    if [ $# -ne 1 ]; then
	printf "Usage: ttypas <service>\n" >&2
	exit 1
    fi
}

access() {
    local pass_service
    local pass_info
    local pass_gpg

    pass_service="$1"
    pass_info=$(gpg --decrypt "$PASS_PATH" | grep "^$pass_service")

    if [ -z "$pass_info" ]; then
	printf "Service not found: %s.\n" "$pass_service" >&2
	exit 1
    fi

    pass_gpg=$(printf "%s" "$pass_info" | awk '{print $2}')
    gpg --decrypt "$pass_gpg"
    err=$?

    if [ $err == 0 ]; then
    notify-send --urgency=critical "$(basename "$0") $(basename "$1")" \
		"Password accessed"
    fi
}

validate "$@"
access "$@"
