#!/bin/sh

# Script for handling APIs and secrets in a encrypted fashion.
#   Dependencies:
#     /usr/local/lib/tty.sh
#     ~/.ttypas.gpg for setting secrets info
#   Structure:
#     service secret_path

. /usr/local/lib/tty.sh

readonly PASS_FILENAME="${HOME}/.ttypas.gpg"
readonly SCRIPT="${0##*/}"

validate()
{
    if [ ! -f "$PASS_FILENAME" ]; then
	tty_fatal "%s: file not found: '%s'" "$SCRIPT" "$PASS_FILENAME"
    fi

    if [ "$#" -ne 1 ]; then
	tty_usage "%s <service>" "$SCRIPT"
    fi
}

access()
{
    pass_service="$1"
    # OPT(gpg): d=decrypt
    pass_info=$(gpg -d -- "$PASS_FILENAME" | grep "^$pass_service")

    if [ -z "$pass_info" ]; then
	tty_fatal "%s: service not found: '%s'" "$SCRIPT" "$pass_service"
    fi

    pass_gpg=$(printf "%s" "$pass_info" | awk '{print $2}')
    # OPT(gpg): d=decrypt
    if ! gpg -d -- "$pass_gpg"; then
	tty_fatal "%s: gpg failed with exit code %d" "$SCRIPT" "$?"
    fi

    tty_notify_error "%s: %s password accesssed" "$SCRIPT" "${1##*/}"
}

validate "$@"
access "$@"
